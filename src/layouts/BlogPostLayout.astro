---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import PostCard from "../components/PostCard.astro";

export interface Props {
	content: {
		title: string;
		description: string;
		pubDate?: string;
		updatedDate?: string;
		heroImage?: string;
		tags?: string[];
	};
}

const {
    content: {title, description, pubDate, updatedDate, heroImage, tags},
} = Astro.props

// Use Astro.glob() to fetch all posts, and then sort them by date.
const posts = (await Astro.glob('../pages/blog/*.{md,mdx}')).sort(
	(a, b) => new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf()
);

const currentTags = Astro.props.content.tags
const tagString = currentTags?.toLocaleString()
console.log('current tags ->', currentTags)
console.log('posts.length ->', posts.length)
console.log('frontmatter ->', posts[0].frontmatter.tags)
const relatedPosts = posts.filter(post => post.frontmatter.tags === currentTags)
const relatedPosts2 = posts.filter(post => post.frontmatter.tags.includes(tagString))
console.log('relatedPosts ->', relatedPosts.length)
console.log('relatedPosts2 ->', relatedPosts2.length)

---

<!DOCTYPE html>
<html lang="en">
    <head>
        <BaseHead title={title} description={description}/>
    </head>
    <body class="bg-zinc-100">
        <Header />
        <main class="flex flex-col mx-auto max-w-4xl px-4 py-20">
            <article class="prose max-w-none prose-lg md:prose-lg prose-a:text-green-500  prose-headings:text-zinc-900 prose-strong:text-zinc-800 prose-h2:text-2xl prose-h3:text-xl prose-h4:text-lg prose-li:marker:text-zinc-600 prose-img:w-full prose-blockquote:border-lime-400 prose-h2:scroll-mt-16 prose-h3:scroll-mt-16">
                {heroImage && (
					<img
						width={870}
						height={360}
						src={heroImage}
						alt=""
						class=""
					/>
				)}
                <h1 class="text-2xl md:text-4xl font-bold " style="margin: 0">{title}</h1>
                {pubDate && <time class=" text-stone-700">{pubDate}</time>}
				{updatedDate && <div class="text-stone-500 ">Last updated on <time>{updatedDate}</time></div>}
                <slot />
                <!-- <div class="text-black">{featuredPost.frontmatter.title}</div> -->
            </article>
            <!-- {relatedPosts2.map((post:any ) => (
                <PostCard post={post}/>
            ))} -->
            
        </main>
    </body>
</html>

<style>
    #container {
      position: relative;
      width: 100%;
      overflow: hidden;
      padding-top: 56.25%; /* 16:9 Aspect Ratio */
    }
    
    #responsive-iframe {
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
      width: 100%;
      height: 100%;
      border: none;
    }
</style>